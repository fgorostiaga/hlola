
==================== FINAL INTERFACE ====================
2019-10-21 10:04:11.384949 UTC

interface HLola-0.1.0.0-81UMLq1MGfHEYLEYD1xjiJ:Lola 8065
  interface hash: 94d9abd6399eb35a3485d10aef6ee1a2
  ABI hash: f52d080a9c6c535055cc2d321870899c
  export-list hash: f0b2b11faceeef480fb3969a0b54aac2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 09f6e2b315fcf38dbec24831c5e286c7
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lola.<$>
  Lola.<*>
  Lola.<:
  Lola.=:
  Lola.=:=
  Lola.getId
  Lola.Declaration{Lola.Input Lola.Output}
  Lola.Expr{Lola.:@ Lola.App Lola.Leaf Lola.Now}
  Lola.Ident
  Lola.Stream
  Lola.Streamable
module dependencies:
package dependencies: aeson-1.4.5.0 array-0.5.3.0
                      attoparsec-0.13.2.3 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8.1 binary-0.8.6.0 bytestring-0.10.8.2
                      containers-0.6.0.1 deepseq-1.4.4.0 dlist-0.8.0.7 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.3 primitive-0.6.4.0 random-1.1
                      scientific-0.3.6.2 tagged-0.8.6 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2 time-compat-1.9.2.2 transformers-0.5.6.2
                      unordered-containers-0.2.10.0 uuid-types-1.0.3 vector-0.12.0.3
orphans: attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         vector-0.12.0.3:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.5.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.7:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  aeson-1.4.5.0:Data.Aeson cd1e38ad278b969589c5b1ad8a30af94
import  -/  aeson-1.4.5.0:Data.Aeson.Types.FromJSON 7d456473c8ab4a622bbb715c080f1c51
import  -/  base-4.12.0.0:Data.Typeable 1095be85dd9009a6503a3981a259490e
import  -/  base-4.12.0.0:Data.Typeable.Internal e1cb15df401654131814917774d4d7ed
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Read 0604f4258fedea7e033ea68c6d7b40f2
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
fixities infixl 4 <$>, infixl 4 <*>, infixl 2 <:, infix 1 =:,
         infix 1 =:=
b276a145c92628a19f5bf124ea374e0b
  $fShowDeclaration :: GHC.Show.Show (Lola.Declaration a)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Lola.Declaration a)
                  (Lola.$fShowDeclaration_$cshowsPrec @ a)
                  (Lola.$fShowDeclaration_$cshow @ a)
                  (Lola.$fShowDeclaration_$cshowList @ a) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowDeclaration1 ::
    Lola.Declaration a -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (x :: Lola.Declaration a) (s :: GHC.Base.String)[OneShot] ->
                 case x of wild {
                   Lola.Input $dFromJSON $dRead $dTypeable ident
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n ident)
                        s
                   Lola.Output $dTypeable ds
                   -> case ds of wild1 { (,) ident ds1 ->
                      GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n ident)
                        s } }) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowDeclaration_$cshow :: Lola.Declaration a -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Lola.Declaration a) ->
                 case ds of wild {
                   Lola.Input $dFromJSON $dRead $dTypeable ident -> ident
                   Lola.Output $dTypeable ds1
                   -> case ds1 of wild1 { (,) ident ds2 -> ident } }) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowDeclaration_$cshowList ::
    [Lola.Declaration a] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (ls :: [Lola.Declaration a]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lola.Declaration a)
                   (Lola.$fShowDeclaration1 @ a)
                   ls
                   s) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowDeclaration_$cshowsPrec ::
    GHC.Types.Int -> Lola.Declaration a -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (ds :: GHC.Types.Int)
                   (x :: Lola.Declaration a)
                   (s :: GHC.Base.String) ->
                 case x of wild {
                   Lola.Input $dFromJSON $dRead $dTypeable ident
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n ident)
                        s
                   Lola.Output $dTypeable ds1
                   -> case ds1 of wild1 { (,) ident ds2 ->
                      GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n ident)
                        s } }) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowExpr :: GHC.Show.Show (Lola.Expr a)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Lola.Expr a)
                  (Lola.$fShowExpr_$cshowsPrec @ a)
                  (Lola.$fShowExpr_$cshow @ a)
                  (Lola.$fShowExpr_$cshowList @ a) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowExpr1 :: Lola.Expr a -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (x :: Lola.Expr a) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Lola.$fShowExpr_$cshow @ a x))
                   s) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowExpr_$cshow :: Lola.Expr a -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
b276a145c92628a19f5bf124ea374e0b
  $fShowExpr_$cshowList :: [Lola.Expr a] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (ls :: [Lola.Expr a]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ (Lola.Expr a) (Lola.$fShowExpr1 @ a) ls s) -}
b276a145c92628a19f5bf124ea374e0b
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Lola.Expr a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (ds :: GHC.Types.Int)
                   (x :: Lola.Expr a)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Lola.$fShowExpr_$cshow @ a x))
                   s) -}
58def21778f62ef6fd18e37f4d5d8f3b
  $tc':@ :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1363462254260495103##
                   7097554869811137563##
                   Lola.$trModule
                   Lola.$tc':@2
                   1#
                   Lola.$tc':@1) -}
4eb35ad916e083b6043ad7565cbef7d6
  $tc':@1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ef7fe3527b712cd699628bd549c5c95d
  $tc':@2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc':@3) -}
e4b4edae1f5c7c268ac7030609f2bdd0
  $tc':@3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("':@"#) -}
364fa96ac40c22e13e7faed8757c6a55
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6167116474938652989##
                   17550929667010977178##
                   Lola.$trModule
                   Lola.$tc'App2
                   2#
                   Lola.$tc'App1) -}
b6dab9ec3b5a1730ff43ae472f6c4425
  $tc'App1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3f405d22e63ff1206e1f38183d7bc13f
  $tc'App2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc'App3) -}
5ee00182699fe2dbe0a1d6f47a80378b
  $tc'App3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'App"#) -}
76bd650d1efe0f450ca998ff307ac610
  $tc'Input :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   166794017322947279##
                   12154160484190871013##
                   Lola.$trModule
                   Lola.$tc'Input2
                   1#
                   Lola.$tc'Input1) -}
1a7b857392ab74c75a5bbdba6e8a0553
  $tc'Input1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5df8478294f51ccfbd10c52ef45f000b
  $tc'Input2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc'Input3) -}
4050d65802feb032518d93bf04b7c705
  $tc'Input3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Input"#) -}
c2008e81fb1d0265d5a078af270d0d32
  $tc'Leaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17462794376047261912##
                   14935146043715888063##
                   Lola.$trModule
                   Lola.$tc'Leaf2
                   1#
                   Lola.$tc'Leaf1) -}
d2a856322787d1b57ad6bf8153ae57c0
  $tc'Leaf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fbf311a447920499816cef568eb084df
  $tc'Leaf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc'Leaf3) -}
efabe33f397b5dc3c4d415988ceafcc5
  $tc'Leaf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Leaf"#) -}
b5a5b23e48c9e53d4fe46349439e5f1e
  $tc'Now :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5649269001523838596##
                   16259010323391183543##
                   Lola.$trModule
                   Lola.$tc'Now2
                   1#
                   Lola.$tc'Now1) -}
ce154ce6ebd8865dee6da391d8d404da
  $tc'Now1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3ae1df61e70fcfa3b8ca16edee907207
  $tc'Now2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc'Now3) -}
de0650cfbdfe47ef59c9ae0a92813f2c
  $tc'Now3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Now"#) -}
730b0d7222eeed9c9045fec01389196f
  $tc'Output :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9802143422676543786##
                   108771710966712994##
                   Lola.$trModule
                   Lola.$tc'Output2
                   1#
                   Lola.$tc'Output1) -}
03c6a9237f62b0dc27c73007e3262172
  $tc'Output1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0ddc5c808a6739e6171fb47d5b2fe390
  $tc'Output2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tc'Output3) -}
efedb75438b7bc8bf1a2dd1d16e23b75
  $tc'Output3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Output"#) -}
d7456966bf69f505e0c06bbba739ba47
  $tcDeclaration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6228944818121585753##
                   2382840431559799359##
                   Lola.$trModule
                   Lola.$tcDeclaration1
                   0#
                   GHC.Types.krep$*Arr*) -}
f5e7ba2495a27d8d57bc61e596e9daba
  $tcDeclaration1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tcDeclaration2) -}
892c05deff72bb52105cc340cc93ab12
  $tcDeclaration2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Declaration"#) -}
9fc1226f81eb308835c017cb7c0a89c2
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1261550546874930938##
                   3774665243734481135##
                   Lola.$trModule
                   Lola.$tcExpr1
                   0#
                   GHC.Types.krep$*Arr*) -}
e61e6ac3bfe96da21fa5577783859c53
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$tcExpr2) -}
bc16558be706d50e98e5a275e2bbb5d7
  $tcExpr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Expr"#) -}
772bc50cb4d45bf727eee9906a266c45
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lola.$trModule3 Lola.$trModule1) -}
fc4d44f18978722b42be0ce53eaac564
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$trModule2) -}
2d78d163b97e730f3b8196d0fb1e58a7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lola"#) -}
6c831d88f00255855e82e8fc2098cff9
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lola.$trModule4) -}
1c6d86e33bf38f9df213d2100ecd99cb
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("HLola-0.1.0.0-81UMLq1MGfHEYLEYD1xjiJ"#) -}
5dbf6fc938f9b138f5c32cf20fb73d22
  (<$>) ::
    (Lola.Streamable a, Lola.Streamable b) =>
    (a -> b) -> Lola.Expr a -> Lola.Expr b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dTypeable :: Lola.Streamable a)
                   ($dTypeable1 :: Lola.Streamable b) ->
                 let {
                   $dTypeable2 :: Data.Typeable.Internal.TypeRep (a -> b)
                   = case GHC.Magic.noinline
                            @ ([GHC.Fingerprint.Type.Fingerprint]
                               -> GHC.Fingerprint.Type.Fingerprint)
                            GHC.Fingerprint.fingerprintFingerprints
                            (GHC.Types.:
                               @ GHC.Fingerprint.Type.Fingerprint
                               (Data.Typeable.Internal.typeRepFingerprint
                                  @ *
                                  @ a
                                  $dTypeable
                                    `cast`
                                  (Data.Typeable.Internal.N:Typeable[0] <*>_N <a>_N))
                               (GHC.Types.:
                                  @ GHC.Fingerprint.Type.Fingerprint
                                  (Data.Typeable.Internal.typeRepFingerprint
                                     @ *
                                     @ b
                                     $dTypeable1
                                       `cast`
                                     (Data.Typeable.Internal.N:Typeable[0] <*>_N <b>_N))
                                  (GHC.Types.[]
                                     @ GHC.Fingerprint.Type.Fingerprint))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                     case $dTypeable
                            `cast`
                          (Data.Typeable.Internal.N:Typeable[0] <*>_N <a>_N) of dt3 { DEFAULT ->
                     case $dTypeable1
                            `cast`
                          (Data.Typeable.Internal.N:Typeable[0] <*>_N <b>_N) of dt4 { DEFAULT ->
                     Data.Typeable.Internal.TrFun
                       @ *
                       @ (a -> b)
                       @ 'GHC.Types.LiftedRep
                       @ 'GHC.Types.LiftedRep
                       @ a
                       @ b
                       @~ <*>_N
                       @~ <a -> b>_N
                       dt1
                       dt2
                       dt3
                       dt4 } } }
                 } in
                 \ (f :: a -> b) (e :: Lola.Expr a) ->
                 Lola.App
                   @ b
                   @ a
                   $dTypeable1
                   $dTypeable2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <a -> b>_N)
                   $dTypeable
                   (Lola.Leaf
                      @ (a -> b)
                      $dTypeable2
                        `cast`
                      (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <a -> b>_N)
                      f)
                   e) -}
8031fcbaf5917c21a272faf5dc82b09a
  (<*>) ::
    (Lola.Streamable a, Lola.Streamable b) =>
    Lola.Expr (a -> b) -> Lola.Expr a -> Lola.Expr b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ @ a
                   @ b
                   ($dTypeable :: Lola.Streamable a)
                   ($dTypeable1 :: Lola.Streamable b) ->
                 let {
                   $dTypeable2 :: Data.Typeable.Internal.TypeRep (a -> b)
                   = case GHC.Magic.noinline
                            @ ([GHC.Fingerprint.Type.Fingerprint]
                               -> GHC.Fingerprint.Type.Fingerprint)
                            GHC.Fingerprint.fingerprintFingerprints
                            (GHC.Types.:
                               @ GHC.Fingerprint.Type.Fingerprint
                               (Data.Typeable.Internal.typeRepFingerprint
                                  @ *
                                  @ a
                                  $dTypeable
                                    `cast`
                                  (Data.Typeable.Internal.N:Typeable[0] <*>_N <a>_N))
                               (GHC.Types.:
                                  @ GHC.Fingerprint.Type.Fingerprint
                                  (Data.Typeable.Internal.typeRepFingerprint
                                     @ *
                                     @ b
                                     $dTypeable1
                                       `cast`
                                     (Data.Typeable.Internal.N:Typeable[0] <*>_N <b>_N))
                                  (GHC.Types.[]
                                     @ GHC.Fingerprint.Type.Fingerprint))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                     case $dTypeable
                            `cast`
                          (Data.Typeable.Internal.N:Typeable[0] <*>_N <a>_N) of dt3 { DEFAULT ->
                     case $dTypeable1
                            `cast`
                          (Data.Typeable.Internal.N:Typeable[0] <*>_N <b>_N) of dt4 { DEFAULT ->
                     Data.Typeable.Internal.TrFun
                       @ *
                       @ (a -> b)
                       @ 'GHC.Types.LiftedRep
                       @ 'GHC.Types.LiftedRep
                       @ a
                       @ b
                       @~ <*>_N
                       @~ <a -> b>_N
                       dt1
                       dt2
                       dt3
                       dt4 } } }
                 } in
                 \ (e0 :: Lola.Expr (a -> b)) (e1 :: Lola.Expr a) ->
                 Lola.App
                   @ b
                   @ a
                   $dTypeable1
                   $dTypeable2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <a -> b>_N)
                   $dTypeable
                   e0
                   e1) -}
ede31a85d24f5fc58211abc6c1cf47eb
  (<:) :: GHC.Show.Show a => Lola.Ident -> a -> Lola.Ident
  {- Arity: 3, Strictness: <L,1*U(A,1*C1(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ident :: Lola.Ident)
                   (decName :: a) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   ident
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Lola.<:3
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Show.show @ a $dShow decName)
                         Lola.<:1))) -}
a2de452bdef0ad5006c6e624b2407f05
  <:1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lola.<:2) -}
7f37e4e4bb2d941894c2c9e5d396faf5
  <:2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
62d4c189c001954e95ea3388d8f85251
  <:3 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '<'#) -}
8a68e19014f2cf73a7f77ec6fc12c12c
  (=:) ::
    Lola.Streamable a =>
    Lola.Ident -> Lola.Expr a -> Lola.Declaration a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m2,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dTypeable :: Lola.Streamable a)
                   (s :: Lola.Ident)
                   (e :: Lola.Expr a) ->
                 Lola.Output @ a $dTypeable (s, e)) -}
ec591942dda2be73ea58f042bf4942aa
  (=:=) :: Lola.Streamable a => Lola.Ident -> a -> Lola.Declaration a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>m2,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dTypeable :: Lola.Streamable a)
                   (s :: Lola.Ident)
                   (e :: a) ->
                 Lola.Output @ a $dTypeable (s, Lola.Leaf @ a $dTypeable e)) -}
b276a145c92628a19f5bf124ea374e0b
  type role Declaration nominal
  data Declaration a where
    Input :: (Data.Aeson.Types.FromJSON.FromJSON a, GHC.Read.Read a,
              Lola.Streamable a) =>
             Lola.Ident -> Declaration a
    Output :: Lola.Streamable a =>
              (Lola.Ident, Lola.Expr a) -> Declaration a
b276a145c92628a19f5bf124ea374e0b
  type role Expr nominal
  data Expr a where
    Leaf :: Lola.Streamable a => a -> Expr a
    App :: (Lola.Streamable a, Lola.Streamable (b -> a),
            Lola.Streamable b) =>
           (Lola.Expr (b -> a)) -> (Lola.Expr b) -> Expr a
    Now :: (Lola.Declaration a) -> Expr a
    (:@) :: Lola.Streamable a =>
            (Lola.Declaration a) -> (GHC.Types.Int, a) -> Expr a
e64c21a7ccd45786c76649982d91fabe
  type Ident = GHC.Base.String
842b407b0b18370d0d7d6fdd47ddc27b
  type Stream = Lola.Declaration :: * -> *
47494beae3139bbfdc210ceee05782ca
  type Streamable =
    Data.Typeable.Internal.Typeable :: * -> GHC.Types.Constraint
ee2e8dc41a89be89599e6acd36d4e6cb
  getId :: Lola.Declaration a -> Lola.Ident
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Lola.Declaration a) ->
                 case ds of wild {
                   Lola.Input $dFromJSON $dRead $dTypeable x -> x
                   Lola.Output $dTypeable ds1
                   -> case ds1 of wild1 { (,) x ds2 -> x } }) -}
instance GHC.Show.Show [Lola.Declaration] = Lola.$fShowDeclaration
instance GHC.Show.Show [Lola.Expr] = Lola.$fShowExpr
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

