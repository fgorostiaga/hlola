
==================== FINAL INTERFACE ====================
2019-10-21 10:04:19.225092 UTC

interface HLola-0.1.0.0-81UMLq1MGfHEYLEYD1xjiJ:Example.Example 8065
  interface hash: 27fbdc0f77122fad1b7f8310f331c2c7
  ABI hash: 7b8b53c170d2ccc38d32aae6c733e69d
  export-list hash: 54881cef886459651b6291f453945c07
  orphan hash: dc00615caa5013c02f3ce77a82e268fc
  flag hash: d5bd55554af082500bdbbcdfa34dcc60
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Example.Example.amazonspec
  Example.Example.dynpar
  Example.Example.examplegraph
  Example.Example.noinputs
  Example.Example.paperEx
module dependencies: Lib.LTL Lib.Pinescript Lib.Utils Lola
                     Syntax.Booleans Syntax.HLPrelude Syntax.Num Syntax.Ord
package dependencies: aeson-1.4.5.0 array-0.5.3.0
                      attoparsec-0.13.2.3 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8.1 binary-0.8.6.0 bytestring-0.10.8.2
                      containers-0.6.0.1 deepseq-1.4.4.0 dlist-0.8.0.7 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.3 primitive-0.6.4.0 random-1.1
                      scientific-0.3.6.2 tagged-0.8.6 template-haskell-2.14.0.0
                      text-1.2.3.1 time-1.8.0.2 time-compat-1.9.2.2 transformers-0.5.6.2
                      unordered-containers-0.2.10.0 uuid-types-1.0.3 vector-0.12.0.3
orphans: HLola-0.1.0.0-81UMLq1MGfHEYLEYD1xjiJ:Syntax.Num
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Clock.TAI
         vector-0.12.0.3:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.5.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.7:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  Lib.LTL 1aeef460f9869d05f1dc3ad16d7a16dc
  exports: 5e7c1704caae20e2d335cc05b7046b4c
  historically 0950e09b49ed32e98409482ba40ebeb5
  percentViolations 5f361b73e38af6816143c13ee8924ac3
import  -/  Lib.Pinescript c53e80dce692a0497d92094599faf165
  exports: 22c0e7f2285219f646be6ecf2ed07ec9
import  -/  Lola f52d080a9c6c535055cc2d321870899c
  exports: f0b2b11faceeef480fb3969a0b54aac2
  :@ 0e91454cfe22ab22364b2d071c8db005
  <: ede31a85d24f5fc58211abc6c1cf47eb
  =: 8a68e19014f2cf73a7f77ec6fc12c12c
  =:= ec591942dda2be73ea58f042bf4942aa
  App 6313dab744ba77caf1d1e856525754b2
  Input 84bbb625cf5c7ec015044d911c3c39d7
  Leaf beb804f20541fc627fd77821a11a3d02
  Now 19aae6044cf44591930683cbda472505
  Stream 842b407b0b18370d0d7d6fdd47ddc27b
import  -/  Syntax.Booleans 2f5b0f6265d2d6e23f9e27da32119b5f
  exports: 71728b3a0c694557a14ef0fe375df96d
  ifThenElse 6b6a230e6325a7bbbc419a7011db1d8f
  not 84b154f0cd561d6a4a5aa09dffe27593
  || d931c5612ab8b65bb21c53366fc02f9d
import  -/  Syntax.HLPrelude f80a67bea1d500b91e76dd8341487f94
  exports: 68fbd00b85e22e00f4229825fd729bf8
import  -/  Syntax.Num 42d53dc12ffc226b88f55b096d15fb83
  exports: 883071c53baa629578d78c5289d88073
  mod 0574d996bf1797d7fa71766d1e41f4c6
import  -/  Syntax.Ord 3abef8f6c923bbd6adef89f28a0cd4f8
  exports: ee3875b9880152641006c5630eff6401
  <= 71950b8323da44ade5981764b7915a6e
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
02c3dd43bfd4c1a667f5dd0c2cd8f939
  $s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Data.Aeson.Types.FromJSON.$fFromJSONChar_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
06b4a1c38ccd731efc9ceb30a6aa2614
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Example.Example.$trModule3
                   Example.Example.$trModule1) -}
4d5c913a6f981743e7c579f10a214511
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Example.Example.$trModule2) -}
8d1335d24785fa4d188ca5522bc27b4d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Example.Example"#) -}
f6cc210e4709632aad8f74302d9965d9
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Example.Example.$trModule4) -}
5d435b558952eba5ac4ade127260a0a5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("HLola-0.1.0.0-81UMLq1MGfHEYLEYD1xjiJ"#) -}
892bdd748f8db6524bb61a0369b72f6f
  $wstars_by_prod ::
    GHC.Base.String
    -> (# Lola.Streamable GHC.Types.Int,
          (Lola.Ident, Lola.Expr GHC.Types.Int) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2] -}
23cf58e7fd1c6ef6b407c6de5b9d15b8
  amazonspec :: [Lola.Stream GHC.Types.Double]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lola.Stream GHC.Types.Double)
                   Example.Example.amazonspec1
                   (GHC.Types.[] @ (Lola.Stream GHC.Types.Double))) -}
d610a8ba20f84814317562d8cc018aff
  amazonspec1 :: Lola.Declaration GHC.Types.Double
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Double
                   Lib.LTL.percentViolations4
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double>_N)
                   Example.Example.amazonspec2) -}
5b5170aba7ca449e71c0b70058d28a41
  amazonspec10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("thebool"#) -}
cb2a7bf51bfb13567a0ee9f67609e7bb
  amazonspec11 :: Lola.Streamable GHC.Types.Bool
  {- Unfolding: (case Data.Typeable.Internal.$wmkTrCon
                        @ *
                        @ GHC.Types.Bool
                        14182099612280475667##
                        2734577064602454082##
                        GHC.Types.$trModule
                        GHC.Types.$tcBool1
                        0#
                        GHC.Types.krep$*
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.SomeTypeRep) of ww7 { (#,,,,#) ww8 ww9 ww10 ww11 ww12 ->
                 (Data.Typeable.Internal.TrTyCon
                    @ *
                    @ GHC.Types.Bool
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12)
                   `cast`
                 (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Bool>_N) }) -}
f5919073c11daebf0b83ae47bf097cc0
  amazonspec12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Lib.LTL.percentViolations3
                   Example.Example.amazonspec13) -}
9a33fa8d9aa6b7838ee080b7de68d760
  amazonspec13 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Lola.<:3
                   Example.Example.amazonspec14) -}
cd2916e234f23bd0a0d7cf83fd557790
  amazonspec14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Example.Example.amazonspec9
                   Lola.<:1) -}
85c08c9a2f19d10468e0b69c2ad37809
  amazonspec2 :: (Lola.Ident, Lola.Expr GHC.Types.Double)
  {- Strictness: m,
     Unfolding: ((Example.Example.amazonspec12,
                  Example.Example.amazonspec3)) -}
63b1988077651658a985d6da7b264905
  amazonspec3 :: Lola.Expr GHC.Types.Double
  {- Unfolding: (Lola.App
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   Syntax.Num./3
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double>_N)
                   Syntax.Num./2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double
                                                                      -> GHC.Types.Double>_N)
                   Syntax.Num./3
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double>_N)
                   Example.Example.amazonspec4
                   Lib.LTL.percentViolations1) -}
a63485331752b6ecce3c6ee4a399dc30
  amazonspec4 :: Lola.Expr (GHC.Types.Double -> GHC.Types.Double)
  {- Unfolding: (Lola.App
                   @ (GHC.Types.Double -> GHC.Types.Double)
                   @ GHC.Types.Double
                   Syntax.Num./2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double
                                                                      -> GHC.Types.Double>_N)
                   Syntax.Num./_$dTypeable2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double
                                                                      -> GHC.Types.Double
                                                                      -> GHC.Types.Double>_N)
                   Syntax.Num./3
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double>_N)
                   Syntax.Num./1
                   Example.Example.amazonspec5) -}
84a5620185c7ffa064bdb316e81e261a
  amazonspec5 :: Lola.Expr GHC.Types.Double
  {- Unfolding: (Lola.App
                   @ GHC.Types.Double
                   @ GHC.Types.Int
                   Syntax.Num./3
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Double>_N)
                   Syntax.Num.intdivide_$dTypeable2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int
                                                                      -> GHC.Types.Double>_N)
                   Syntax.Num.intdivide2
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Syntax.Num.intdivide1
                   Example.Example.amazonspec6) -}
04df2377f100e4d31363ac662d5357f5
  amazonspec6 :: Lola.Expr GHC.Types.Int
  {- Strictness: m3,
     Unfolding: (Lola.Now
                   @ GHC.Types.Int
                   Example.Example.amazonspec7) -}
e432d1276e2c4c8bf8a6e657077f2569
  amazonspec7 :: Lola.Stream GHC.Types.Int
  {- Unfolding: (Lib.LTL.nViolations Example.Example.amazonspec8) -}
d035845e3ee12f6a31744ca690939cd8
  amazonspec8 :: Lola.Declaration GHC.Types.Bool
  {- Strictness: m1,
     Unfolding: (Lola.Input
                   @ GHC.Types.Bool
                   Data.Aeson.Types.FromJSON.$fFromJSONBool
                   GHC.Read.$fReadBool
                   Example.Example.amazonspec11
                   Example.Example.amazonspec9) -}
1c75c7f4ae28b7c9f785ce6a802234ae
  amazonspec9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.amazonspec10) -}
14a19a13d435858b2e0166e662b8423c
  dynpar :: [Lola.Stream GHC.Types.Int]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lola.Stream GHC.Types.Int)
                   Example.Example.dynpar1
                   (GHC.Types.[] @ (Lola.Stream GHC.Types.Int))) -}
aa8ada30ec7c255074b82900f73d14cd
  dynpar1 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.dynpar2) -}
6979e375b555578fd93cd6d6af0afa87
  dynpar10 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Example.Example.dynpar11
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e321614af854d7159fc5a8344b125c4d
  dynpar11 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'a'#) -}
2a3597f02bfc0aaba528bcc29fbde9bc
  dynpar12 :: Lola.Expr GHC.Types.Bool
  {- Strictness: m3,
     Unfolding: (Lola.Now @ GHC.Types.Bool Example.Example.dynpar13) -}
9ada29a058d8207f0a7639a9e7700af6
  dynpar13 :: Lola.Declaration GHC.Types.Bool
  {- Strictness: m1,
     Unfolding: (Lola.Input
                   @ GHC.Types.Bool
                   Data.Aeson.Types.FromJSON.$fFromJSONBool
                   GHC.Read.$fReadBool
                   Example.Example.amazonspec11
                   Example.Example.dynpar14) -}
c48564090ddcdf7900ac1b459e8515b3
  dynpar14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.dynpar15) -}
986beb78ef906a3d4ecb920507830e78
  dynpar15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pid_out"#) -}
0ef70f799c9735e90d4bb6a25e1329f7
  dynpar16 ::
    Lola.Expr GHC.Types.Bool
    -> Lola.Expr GHC.Types.Int
    -> Lola.Expr GHC.Types.Int
    -> Lola.Expr GHC.Types.Int
  {- Unfolding: (Syntax.Booleans.ifThenElse
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)) -}
f944cdd9a798e8404ee7c2dd0b2247e4
  dynpar17 :: Data.Typeable.Internal.TypeRep GHC.Types.Int
  {- Unfolding: (case Data.Typeable.Internal.$wmkTrCon
                        @ *
                        @ GHC.Types.Int
                        5193196903533114208##
                        8143820745237564347##
                        GHC.Types.$trModule
                        GHC.Types.$tcInt1
                        0#
                        GHC.Types.krep$*
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.SomeTypeRep) of ww7 { (#,,,,#) ww8 ww9 ww10 ww11 ww12 ->
                 Data.Typeable.Internal.TrTyCon
                   @ *
                   @ GHC.Types.Int
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12 }) -}
7b670745dc5eab1d45133da2b9770e1c
  dynpar18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.dynpar19) -}
815837ebe8a7c7bcfcf2756da2ed8d5d
  dynpar19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ou"#) -}
edd0e94d6e12f697ea948d47ac981490
  dynpar2 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.dynpar18, Example.Example.dynpar3)) -}
47c272843f2cab2eb048c0fb59260e70
  dynpar3 :: Lola.Expr GHC.Types.Int
  {- Unfolding: (Example.Example.dynpar16
                   Example.Example.dynpar12
                   Example.Example.dynpar8
                   Example.Example.dynpar4) -}
103f0fca3762821f9e7145d05d3c9491
  dynpar4 :: Lola.Expr GHC.Types.Int
  {- Strictness: m3,
     Unfolding: (Lola.Now @ GHC.Types.Int Example.Example.dynpar5) -}
e2e40969abc0cbe4a8e5bff0e5dc9d12
  dynpar5 :: Lola.Declaration GHC.Types.Int
  {- Unfolding: (case Example.Example.$wstars_by_prod
                        Example.Example.dynpar6 of ww { (#,#) ww1 ww2 ->
                 Lola.Output @ GHC.Types.Int ww1 ww2 }) -}
0d7dc1e3e992965d4d067ca1bb1b55da
  dynpar6 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Example.Example.dynpar7
                   (GHC.Types.[] @ GHC.Types.Char)) -}
873204b1c9dc23da8b55ed4f39d2e9a4
  dynpar7 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'b'#) -}
6a5afca3927e0cbc2eb1f3748723a634
  dynpar8 :: Lola.Expr GHC.Types.Int
  {- Strictness: m3,
     Unfolding: (Lola.Now @ GHC.Types.Int Example.Example.dynpar9) -}
05f39343645f4138d25fb0c6a9a9f23e
  dynpar9 :: Lola.Declaration GHC.Types.Int
  {- Unfolding: (case Example.Example.$wstars_by_prod
                        Example.Example.dynpar10 of ww { (#,#) ww1 ww2 ->
                 Lola.Output @ GHC.Types.Int ww1 ww2 }) -}
00107e1586338fc22a6fa1c9ed5bbcce
  examplegraph :: [Lola.Stream GHC.Types.Int]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lola.Stream GHC.Types.Int)
                   Example.Example.examplegraph1
                   (GHC.Types.[] @ (Lola.Stream GHC.Types.Int))) -}
5f166a21d899219275549c14ccbd6ad2
  examplegraph1 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph2) -}
1365724a643b01c40eb4e80246b649d4
  examplegraph10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
ba6290d1b15e37e0b4ec402dd8fe3a53
  examplegraph11 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph12) -}
40a80d1ab6159aca4680cfddd2c617ad
  examplegraph12 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.examplegraph18,
                  Example.Example.examplegraph13)) -}
eac24df2b8006e980308ff594d130234
  examplegraph13 :: Lola.Expr GHC.Types.Int
  {- Strictness: m4,
     Unfolding: (Lola.:@
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph_s1
                   Example.Example.examplegraph8) -}
99b8c2cf89c55df6bede98e570e7d3b0
  examplegraph14 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.examplegraph16,
                  Example.Example.examplegraph15)) -}
7b532f9e4015e2f5b26ba239fba13ed8
  examplegraph15 :: Lola.Expr GHC.Types.Int
3961e4983590ece1416723f3a5936a29
  examplegraph16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.examplegraph17) -}
b5eadc5b57c95430b57e96b57b9c7068
  examplegraph17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s1"#) -}
e5d08ae3570e2c1988ae310c84c58217
  examplegraph18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.examplegraph19) -}
bb0e0d2eab7784bcfb1c43f062d748da
  examplegraph19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s3"#) -}
f0ad43cb117ec5ad4f35c36d8cadc4fc
  examplegraph2 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.examplegraph24,
                  Example.Example.examplegraph3)) -}
31aca9c5ea487e073b5a9f89634354e9
  examplegraph20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.examplegraph21) -}
9fcfe9fef4bbfad79dff3952be472068
  examplegraph21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s2"#) -}
9016d1fb42b7ba20bb7a9c4425c83bdd
  examplegraph22 :: Lola.Expr GHC.Types.Int
  {- Strictness: m3,
     Unfolding: (Lola.Now
                   @ GHC.Types.Int
                   Example.Example.examplegraph_s1) -}
a6b6390c403880344c13aa2468f76f43
  examplegraph23 ::
    Lola.Expr GHC.Types.Int
    -> Lola.Expr GHC.Types.Int -> Lola.Expr GHC.Types.Int
  {- Unfolding: (Syntax.Num.$fNumExpr_$c+
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   GHC.Num.$fNumInt) -}
2421e7598ba5efaefc882a1d8c060157
  examplegraph24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.examplegraph25) -}
9eda6c4bb98d66d685e2c9dda33b9476
  examplegraph25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sout"#) -}
babad881be143eb747258e60a7a8de5d
  examplegraph3 :: Lola.Expr GHC.Types.Int
  {- Unfolding: (Example.Example.examplegraph23
                   Example.Example.examplegraph22
                   Example.Example.examplegraph4) -}
15d22cbf6084346ad9101d84add74354
  examplegraph4 :: Lola.Expr GHC.Types.Int
  {- Strictness: m3,
     Unfolding: (Lola.Now
                   @ GHC.Types.Int
                   Example.Example.examplegraph5) -}
4aa64e6f0dc82ab718def5f5c587b054
  examplegraph5 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph6) -}
0a4b564b6d0dae209a53b1f0617cde52
  examplegraph6 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.examplegraph20,
                  Example.Example.examplegraph7)) -}
d56f26e0349eb218e0ee5dcfebc62e2f
  examplegraph7 :: Lola.Expr GHC.Types.Int
  {- Strictness: m4,
     Unfolding: (Lola.:@
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph11
                   Example.Example.examplegraph8) -}
ae51109d79fe2792c716bf111b689d98
  examplegraph8 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Example.Example.examplegraph10,
                  Example.Example.examplegraph9)) -}
0512d4a391181ef4245167d13ca8b82d
  examplegraph9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b90bd3ca0d5c4bfb59dc98591e17f348
  examplegraph_s1 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.examplegraph14) -}
3f09f7fd95e5f435d0a767f9bd39f7e8
  noinputs :: [Lola.Stream GHC.Types.Int]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lola.Stream GHC.Types.Int)
                   Example.Example.noinputs_s1
                   (GHC.Types.[] @ (Lola.Stream GHC.Types.Int))) -}
f2523e536b26a098de29a89f2fad881c
  noinputs1 :: (Lola.Ident, Lola.Expr GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((Example.Example.examplegraph16,
                  Example.Example.noinputs2)) -}
f4b0a878037fea3571ff428d7bf2bea2
  noinputs2 :: Lola.Expr GHC.Types.Int
f4e228f37b71a7b4bfe975c60253d681
  noinputs_s1 :: Lola.Declaration GHC.Types.Int
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Int
                   Example.Example.dynpar17
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Int>_N)
                   Example.Example.noinputs1) -}
41400af8c463729dc722eb4f997fd5b9
  paperEx :: [Lola.Stream GHC.Types.Bool]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lola.Stream GHC.Types.Bool)
                   Example.Example.paperEx_s11
                   (GHC.Types.[] @ (Lola.Stream GHC.Types.Bool))) -}
ab136042b48afc2d66c16b445217969e
  paperEx1 :: (Lola.Ident, Lola.Expr GHC.Types.Bool)
  {- Strictness: m,
     Unfolding: ((Example.Example.paperEx3,
                  Example.Example.paperEx2)) -}
b51c0273b9e33b90fdd7f1f4339886bb
  paperEx2 :: Lola.Expr GHC.Types.Bool
  {- Strictness: m4 -}
66679220cb80afa3105ace42cadf5ce9
  paperEx3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Example.Example.paperEx4) -}
53cb0b8f69bacd4f88d266af372d2348
  paperEx4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s11"#) -}
ee18ecbc64628e65568d4e1acd46a413
  paperEx5 :: Data.Typeable.Internal.TypeRep GHC.Types.Bool
  {- Unfolding: (case Data.Typeable.Internal.$wmkTrCon
                        @ *
                        @ GHC.Types.Bool
                        14182099612280475667##
                        2734577064602454082##
                        GHC.Types.$trModule
                        GHC.Types.$tcBool1
                        0#
                        GHC.Types.krep$*
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.SomeTypeRep) of ww7 { (#,,,,#) ww8 ww9 ww10 ww11 ww12 ->
                 Data.Typeable.Internal.TrTyCon
                   @ *
                   @ GHC.Types.Bool
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12 }) -}
335f21f41388c2b9e789471d122e864a
  paperEx_s11 :: Lola.Declaration GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Lola.Output
                   @ GHC.Types.Bool
                   Example.Example.paperEx5
                     `cast`
                   (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <GHC.Types.Bool>_N)
                   Example.Example.paperEx1) -}
"SPEC/Example.Example $fFromJSON[] @ Char" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                   GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char v
  = Example.Example.$s$fFromJSON[]
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

